name: Build and release

on:
  push:
    branches: [ "main" ]

env:
  VERSION: v${{ vars.VERSION_MAJOR }}.${{ vars.VERSION_MINOR }}.${{ github.run_number }}

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu", "windows"]
      
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        
    - name: Test
      run: go test -v ./...
      
    - name: Build
      run: go build -ldflags "-X main.versionTool=${{ env.VERSION }}" -v -o ./bin/prev-updater-${{ matrix.os }} ./cmd/main.go 
      if: ${{ matrix.os }} != "windows"

    - name: Build
      run: go build -ldflags "-X main.versionTool=${{ env.VERSION }}" -v -o .\bin\prev-updater-${{ matrix.os }}.exe .\cmd\main.go
      if: ${{ matrix.os }} == "windows"

    - name: Publish artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: prev-updater-${{ matrix.os }}
        path: ./bin

  release:
    runs-on: ubuntu-latest
    needs: [build]
    continue-on-error: false
    steps:
      - name: Download windows artifact
        uses: actions/download-artifact@v5.0.0
        with:
          path: ./bin

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: pre-updater-${{ env.VERSION }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        name: Upload windows binaire
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/prev-updater-windows.exe
          asset_name: prev-updater-windows-${{ env.VERSION }}.exe
          
      - uses: actions/upload-release-asset@v1.0.1
        name: Upload linux binaire
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/prev-updater-ubuntu
          asset_name: prev-updater-linux-${{ env.VERSION }}

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
